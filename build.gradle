plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'pl.bkkuc'
version = '1.0.0-RELEASE'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        url = "https://repo.jeff-media.de/maven2"
    }
}

dependencies {
    //compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:26.0.1'


    //compileOnly 'org.projectlombok:lombok:1.18.30'
    //annotationProcessor 'org.projectlombok:lombok:1.18.30'

    compileOnly 'com.mojang:authlib:1.5.21'

    implementation("com.github.cryptomorin:XSeries:11.2.0.1")
    implementation 'com.zaxxer:HikariCP:5.0.1'

    implementation 'com.jeff-media:MorePersistentDataTypes:2.4.0'

    compileOnly 'net.luckperms:api:5.4'
    compileOnly "me.clip:placeholderapi:2.11.6"
}

assemble.dependsOn(shadowJar)

shadowJar {
    minimize()
    exclude('org/slf4j/**')

    from (sourceSets.main.allSource) {
        exclude('plugin.yml')
    }
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    //withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}